name: Multi-Stage Deploy to AKS

on:
  push:
    branches:
      - main
      - prod
      - uat
      



jobs:
  # Stage 1: Build Docker Image
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Azure CLI
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # # Build Docker Image
      # - name: Build Docker Image
      #   env:
      #     IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      #   run: |
      #     docker build -t $IMAGE_NAME:$TAG .

  # Stage 2: Push Docker Image to ACR
  push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Azure CLI
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Push Docker Image
      # - name: Push Docker Image to ACR
      #   env:
      #     ACR_NAME: ${{ secrets.ACR_NAME }}
      #     IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      #   run: |
      #     az acr login --name $ACR_NAME
      #     docker tag $IMAGE_NAME:$TAG $ACR_NAME/$IMAGE_NAME:$TAG
      #     docker push $ACR_NAME/$IMAGE_NAME:$TAG

  # Stage 3: Deploy to Dev Environment
  deploy-dev:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    environment:
      name: dev
    needs: push
    if: github.ref == 'refs/heads/dev'

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Azure CLI
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy to AKS (Dev)
      - name: Deploy to AKS
        env:
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
          IMAGE_NAME:  ${{ secrets.IMAGE_NAME }}
          TAG: prod
        run: |
         az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME
         kubectl apply -f deployment.yaml

  # Stage 4: Deploy to UAT Environment
  deploy-uat:
    name: Deploy to UAT Environment
    runs-on: ubuntu-latest
    environment:
      name: uat
    needs: push
    if: github.ref == 'refs/heads/uat'

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Azure CLI
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # # Deploy to AKS (UAT)
      # - name: Deploy to AKS (UAT)
      #   env:
      #     RESOURCE_GROUP: ${{ secrets.UAT_RESOURCE_GROUP }}
      #     AKS_CLUSTER_NAME: ${{ secrets.UAT_AKS_CLUSTER_NAME }}
      #     ACR_NAME: ${{ secrets.ACR_NAME }}
      #     IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      #     TAG: prod
      #   run: |
      #     az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME
      #     kubectl apply -f deployment.yaml

  # Stage 5: Deploy to Prod Environment
  deploy-prod:
    name: Deploy to Prod Environment
    runs-on: ubuntu-latest
    environment:
      name: prod
    needs: push
    if: github.ref == 'refs/heads/prod'

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Azure CLI
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # # Deploy to AKS (Prod)
      # - name: Deploy to AKS (Prod)
      #   env:
      #     RESOURCE_GROUP: ${{ secrets.PROD_RESOURCE_GROUP }}
      #     AKS_CLUSTER_NAME: ${{ secrets.PROD_AKS_CLUSTER_NAME }}
      #     ACR_NAME: ${{ secrets.ACR_NAME }}
      #     IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      #     TAG: prod
      #   run: |
      #     az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME
      #     kubectl apply -f deployment.yaml
